-- compile with:
--    ag -dm --module=Top.TypeRules.Syntax Syntax.ag

imports {
import Top.Cobalt.AGSyntax
import Top.Cobalt.ShowAG
}

DATA TypeSystem 
   | TypeSystem
        agDATAs       : AGDatas
				judgementdecls: JudgementDecls
        typerules     : TypeRules
		   
DATA JudgementDecl
   | JudgementDecl
				datatype : String
				inhs     : {[String]}
				syns     : {[String]}
				
DATA TypeRule 
   | TypeRule
        rulename    : String
        deduction   : DeductionRule
        constraints : ConstraintTerms

DATA DeductionRule 
   | DeductionRule
        premises   : Judgements
        conclusion : Judgement

DATA Judgement  
   | Judgement
        inhs       : Terms -- was: typeEnv 
        expression : Term
        syns       : Terms -- was: ttype

DATA ConstraintTerm
   | ConstraintTerm
	      constraint : Term
				
DATA Term
   | TermVar 
        variable  : String
	 | TermString
	      string    : String
   | TermApp 
        function  : String 
        arguments : Terms
          
TYPE TypeRules       = [TypeRule]
TYPE Judgements 		 = [Judgement]
TYPE Terms           = [Term]
TYPE ConstraintTerms = [ConstraintTerm]
TYPE JudgementDecls  = [JudgementDecl]
